# Generated by Django 5.2.1 on 2025-05-16 01:45

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ParametrosDimensionamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_cenario', models.CharField(help_text='Um nome único para identificar este conjunto de parâmetros.', max_length=100, unique=True, verbose_name='Nome do Cenário')),
                ('volume_chamadas_hora', models.PositiveIntegerField(help_text='Volume médio de chamadas (ou contatos) esperado por hora.', verbose_name='Volume de Chamadas/Hora')),
                ('tma_segundos', models.PositiveIntegerField(help_text='Tempo Médio de Atendimento em segundos.', verbose_name='TMA (segundos)')),
                ('nivel_servico_meta_percentual', models.FloatField(default=80.0, help_text='Ex: 80 para 80%. Percentual de chamadas a serem atendidas dentro do tempo meta.', verbose_name='Meta de Nível de Serviço (%)')),
                ('tempo_atendimento_meta_segundos', models.PositiveIntegerField(default=20, help_text='Ex: 20 segundos. Tempo máximo para atender uma chamada para cumprir o NS.', verbose_name='Tempo Meta para Atendimento (segundos)')),
                ('ocupacao_maxima_desejada_percentual', models.FloatField(default=85.0, help_text='Ex: 85 para 85%. Percentual máximo de tempo que os agentes devem estar ocupados.', verbose_name='Ocupação Máxima Desejada (%)')),
                ('fator_encolhimento_shrinkage_percentual', models.FloatField(default=30.0, help_text='Ex: 30 para 30%. Percentual para cobrir pausas, treinamentos, faltas, etc.', verbose_name='Fator de Encolhimento (Shrinkage %)')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Parâmetro de Dimensionamento',
                'verbose_name_plural': 'Parâmetros de Dimensionamento',
                'ordering': ['nome_cenario'],
            },
        ),
        migrations.CreateModel(
            name='ResultadoDimensionamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_referencia_calculo', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Referência do Cálculo')),
                ('agentes_erlang_c_calculados', models.FloatField(help_text='Número de agentes necessários pela fórmula de Erlang C (antes do shrinkage).', verbose_name='Agentes Calculados (Erlang C)')),
                ('agentes_necessarios_com_shrinkage', models.FloatField(help_text='Número total de agentes necessários incluindo o fator de encolhimento.', verbose_name='Agentes Necessários (com Shrinkage)')),
                ('ocupacao_resultante_percentual', models.FloatField(blank=True, null=True, verbose_name='Ocupação Resultante Estimada (%)')),
                ('nivel_servico_estimado_percentual', models.FloatField(blank=True, null=True, verbose_name='Nível de Serviço Estimado (%)')),
                ('data_calculo', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cálculo')),
                ('parametros', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultados', to='dimensionamento.parametrosdimensionamento', verbose_name='Parâmetros do Cenário Associado')),
            ],
            options={
                'verbose_name': 'Resultado de Dimensionamento',
                'verbose_name_plural': 'Resultados de Dimensionamento',
                'ordering': ['-data_calculo'],
            },
        ),
    ]
